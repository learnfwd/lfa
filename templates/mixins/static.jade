mixin article(title, subtitle)
  - if (!self) { locals.title = title; locals.subtitle = subtitle; }
  article
    block

mixin section(title)
  - if (!self) { locals.sections = locals.sections || []; locals.sections.push(title); }
  section
    block

mixin img(path)
  img(src="#{path}")

mixin parallax(path)
  .parallax(style="background-image: url('#{path}')")
    if block
      block

mixin link_to(path)
  a(href="#{path}")
    if block
      block
    else
      = path

mixin widget(path)
  iframe(src="#{path}")

//- don't use this manually
mixin _toc(chapters)
  ul.tableofcontents
    each chapter in chapters
      li.fold(data-url="#{chapter.url}")
        - var hasChildren = (chapter.children && chapter.children.length);
        if chapter.locals.subtitle
          a.subtitled(href="#book/#{chapter.url}", class = hasChildren ? 'foldable' : '')
            span.title= chapter.locals.title
            span.subtitle= chapter.locals.subtitle
        else
          a(href="#book/#{chapter.url}", class = hasChildren ? 'foldable' : '')
            span.title
              = chapter.locals.title
        if hasChildren
          .fold-button
            i.fold-icon.fa.fa-fw.fa-chevron-down
          .children-container
            +_toc(chapter.children)

//- +minitoc() generates a mini-toc from the current chapter that we're on,
//- or a specified url.
mixin minitoc(url)
  - var id = (url + Math.random().toString()).hashCode();
  .minitoc(id='minitoc_#{id}')
  script.
    $(document).ready(function() {
      var url = '#{url}' || window.App.book.currentChapter;
      new TocView({ el: $('#minitoc_#{id}'), url: url });
    });

mixin youtube(url)
  .video
    iframe(src="https://www.youtube.com/embed/#{url}?rel=0", frameborder="0", allowfullscreen)

mixin vimeo(url)
  .video
    iframe(src="//player.vimeo.com/video/#{url}?rel=0", frameborder="0", webkitallowfullscreen, mozallowfullscreen, allowfullscreen)

mixin cloudfront(server, name)
  .video
    video(controls, preload="auto", poster="http://#{server}.cloudfront.net/#{name}.png")
      source(src="http://#{server}.cloudfront.net/#{name}.mp4")

//- Bootstrap modal mixin.
mixin modal(id, title)
  div.modal(id="#{id}", tabindex='-1', role='dialog', aria-labelledby='#{id}-label', aria-hidden='true')
    .modal-dialog
      .modal-content
        .modal-header
          button.close(type='button', data-dismiss='modal', aria-hidden='true') Ã—
          h4.modal-title= title
        .modal-body
          if block
            block
          else
            p.text-danger You forgot to add content to the modal. Like this:
            pre.
              //- the button to open the modal
              .btn(href="#my-modal", data-toggle="modal")
              
              //- the actual modal
              +modal("my-modal", "A title")
                p Content.

mixin lightbox(path, largerPath)
  - var largerPath = largerPath || '#';
  a.lightbox(href='#{largerPath}')
    img(src="#{path}", alt="")

mixin draw(options)
  - options = options || {};
  - options.width = options.width || '';
  - options.height = options.height || '';
  - options.primaryColor = options.primaryColor || '#333';
  - options.secondaryColor = options.secondaryColor || '#3388CD';
  - options.backgroundColor = options.backgroundColor || '#eee';
  
  .sketchpad(data-width="#{options.width}", data-height="#{options.height}", data-primary-color="#{options.primaryColor}", data-secondary-color="#{options.secondaryColor}", data-background-color="#{options.backgroundColor}")
    .editor
    .row
      .col-xs-12.col-sm-6
        .btn-group.btn-group-justified.btn-group-lg
          .btn.btn-default.btn-color-switcher(style="color: #{options.primaryColor};"): i.fa.fa-pencil.fa-fw
          .btn.btn-default.btn-eraser: i.fa.fa-eraser.fa-fw
          .btn.btn-default.btn-destroy: .text-danger: i.fa.fa-trash-o.fa-fw
      .col-xs-12.col-sm-6
        .btn-group.btn-group-justified.btn-group-lg
          .btn.btn-default.btn-undo: i.fa.fa-rotate-left.fa-fw
          .btn.btn-default.btn-redo: i.fa.fa-rotate-right.fa-fw
          .btn.btn-default.btn-save: .text-success: i.fa.fa-cloud-download.fa-fw

mixin rightbar()
  p.text-center Nothing here yet.

mixin error-message()
  p If you're seeing this, either you have to wait for things to finish loading, or something went wrong.

mixin browser-warning-head()
  if !global.options.browser_warning
    script.
      window.browserOK = true;
  else
    script.
      (function () {
        var nVer = navigator.appVersion;
        var nAgt = navigator.userAgent;
        var browserName  = navigator.appName;
        var fullVersion  = ''+parseFloat(navigator.appVersion); 
        var majorVersion = parseInt(navigator.appVersion,10);
        var osName = 'Unknown';
        var nameOffset,verOffset,ix;
        var browserOK = false;

        if (nAgt.indexOf("Android")!=-1) {
          osName = "Android";
        } else if (nAgt.indexOf("iPhone")!=-1 || nAgt.indexOf("iPod")!=-1 || nAgt.indexOf("iPad")!=-1) {
          osName = "iOS";
        } else if (nAgt.indexOf("Linux")!=-1) {
          osName = "Linux";
        } else if (nAgt.indexOf("Mac OS X")!=-1) {
          osName = "OS X";
        } else if (nAgt.indexOf("Windows")!=-1) {
          osName = "Windows";
        }

        // In Opera, the true version is after "Opera" or after "Version"
        if ((verOffset=nAgt.indexOf("Opera"))!=-1) {
         browserName = "Opera";
         fullVersion = nAgt.substring(verOffset+6);
         if ((verOffset=nAgt.indexOf("Version"))!=-1) 
           fullVersion = nAgt.substring(verOffset+8);
        }
        // In MSIE, the true version is after "MSIE" in userAgent
        else if ((verOffset=nAgt.indexOf("MSIE"))!=-1) {
         browserName = "Microsoft Internet Explorer";
         fullVersion = nAgt.substring(verOffset+5);
        }
        // In MSIE 11, the true version is after "ver:" in userAgent
        else if ((verOffset=nAgt.indexOf("Trident"))!=-1) {
         verOffset = nAgt.indexOf("rv:");
         browserName = "Microsoft Internet Explorer";
         fullVersion = nAgt.substring(verOffset+3);
        }
        // In Chrome, the true version is after "Chrome" 
        else if ((verOffset=nAgt.indexOf("Chrome"))!=-1) {
         browserName = "Chrome";
         fullVersion = nAgt.substring(verOffset+7);
        }
        // In Safari, the true version is after "Safari" or after "Version" 
        else if ((verOffset=nAgt.indexOf("Safari"))!=-1) {
         browserName = "Safari";
         fullVersion = nAgt.substring(verOffset+7);
         if ((verOffset=nAgt.indexOf("Version"))!=-1) 
           fullVersion = nAgt.substring(verOffset+8);
        }
        // In Firefox, the true version is after "Firefox" 
        else if ((verOffset=nAgt.indexOf("Firefox"))!=-1) {
         browserName = "Firefox";
         fullVersion = nAgt.substring(verOffset+8);
        }
        // In most other browsers, "name/version" is at the end of userAgent 
        else if ( (nameOffset=nAgt.lastIndexOf(' ')+1) < 
                  (verOffset=nAgt.lastIndexOf('/')) ) 
        {
         browserName = nAgt.substring(nameOffset,verOffset);
         fullVersion = nAgt.substring(verOffset+1);
         if (browserName.toLowerCase()==browserName.toUpperCase()) {
          browserName = navigator.appName;
         }
        }
        // trim the fullVersion string at semicolon/space/) if present
        if ((ix=fullVersion.indexOf(";"))!=-1)
           fullVersion=fullVersion.substring(0,ix);
        if ((ix=fullVersion.indexOf(" "))!=-1)
           fullVersion=fullVersion.substring(0,ix);
        if ((ix=fullVersion.indexOf(")"))!=-1)
           fullVersion=fullVersion.substring(0,ix);

        majorVersion = parseInt(''+fullVersion,10);
        if (isNaN(majorVersion)) {
         fullVersion  = ''+parseFloat(navigator.appVersion); 
         majorVersion = parseInt(navigator.appVersion,10);
        }

        if (browserName === undefined) {
          browserName = 'Unknown Browser';
        }

        browserOK = ( (browserName === 'Chrome' && majorVersion >= 31) ||
                      (browserName === 'Firefox' && majorVersion >= 25) ||
                      (browserName === 'Safari' && majorVersion >= 6) ||
                      (browserName === 'Microsoft Internet Explorer' && majorVersion >= 10) );

        //console.log('UserAgent: ', nAgt);
        //console.log('Browser detection: ' + browserName + ' ' + 
        //  fullVersion + '(' + majorVersion + ') on ' +
        //  osName + (browserOK ? ' OK' : ' FAIL'));

        if (!browserOK) {
          var browsers = {
            chrome: {
              href: 'https://www.google.com/chrome/browser/',
              text: 'Google Chrome (&gt;= 31.0)'
            },
            safari: {
              href: 'https://www.apple.com/safari/',
              text: 'Apple Safari (&gt;= 6.0)'
            },
            firefox: {
              href: 'http://www.mozilla.org/firefox/new/',
              text: 'Mozilla Firefox (&gt;= 25.0)'
            },
            msie: {
              href: 'http://windows.microsoft.com/en-us/internet-explorer/download-ie',
              text: 'Internet Explorer (&gt;= 10.0)'
            },
            mobilesafari: {
              href: 'https://www.apple.com/ios/',
              text: 'Apple Mobile Safari (iOS &gt;= 6.0)'
            },
            androidchrome: {
              href: 'market://details?id=com.android.chrome',
              text: 'Google Chrome (&gt;= 31.0)'
            },
          };

          var recommend = [];

          if (osName === 'Android') {
            recommend = ['androidchrome'];
          } else if (osName === 'iOS') {
            recommend = ['mobilesafari'];
          } else {
            recommend.push('chrome');
            if (osName === 'OS X') {
              recommend.push('safari');
            }
            recommend.push('firefox');
            if (osName === 'Windows') {
              recommend.push('msie');
            }
          }

          var list = '';
          for (var i = 0, n = recommend.length; i < n; i++) {
            var brw = browsers[recommend[i]];
            list = list + '<li><a href="' + brw.href + '">' + brw.text + '</a></li>';
          }

          window.browserRecomendationList = list;
        }

        window.browserFullName = browserName + ' ' + fullVersion;
        window.browserOK = browserOK;
      })();

mixin browser-warning-content()
  #browser-warning
    script.
      if (window.browserOK) {
        document.write('<style type="text/css">#browser-warning{ display: none; }</style>');
        function removeClass(el, className) {
          el.className = el.className.replace(className, '');
        }
        removeClass(document.querySelector('#scrollview'), 'locked');
      }

    - var default_browser_warning = {title: 'Outdated or unsupported browser', body: 'We\'ve noticed that you\'re using <strong>%1</strong>. This browser or platform is either old or unsupported. We\'re not stopping you from continuing, but we warn you that some content might not be displayed or function correctly. We recommend you updating/switching to one of these:'};
    - var browser_warning = global.options.browser_warning;
    - if (typeof(browser_warning) !== 'object') {
    -   browser_warning = default_browser_warning;
    - }
    - browser_warning.title = browser_warning.title || default_browser_warning.title;
    - browser_warning.body = browser_warning.body || default_browser_warning.body;

    if global.options.browser_warning
      .bwarn-content.col-lg-8.col-lg-offset-2.col-md-8.col-md-offset-2.col-sm-10.col-sm-offset-1.col-xs-12
        script.
          window.removeBrowserWarning = function() {
            var el = document.querySelector('#browser-warning');
            el.parentNode.removeChild(el);
            function removeClass(el, className) {
              el.className = el.className.replace(className, '');
            }
            removeClass(document.querySelector('#scrollview'), 'locked');
          }
        h1.pull-right
          a(href="#", onclick="removeBrowserWarning()").btn.btn-outline-inverse.btn-lg OK
        h1.bwarn-title!= browser_warning.title
        p.bwarn-body!= browser_warning.body
        script.
          var el = document.querySelector('#browser-warning .bwarn-content .bwarn-body');
          el.innerHTML = el.innerHTML.replace('%1', window.browserFullName);
        ul
          script.
            if (!window.browserOK && window.browserRecomendationList) {
              document.write(window.browserRecomendationList);
            }
