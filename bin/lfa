#!/usr/bin/env node

var args = require('optimist')
            .alias('v', 'version')
            .alias('?', 'help')
            .alias('h', 'help')
            .default('analytics', true)
            .argv;

// check for a new version
var notifier = require('update-notifier')({ packagePath: '../package.json' });
if (notifier.update) { notifier.notify(); }

var analytics = require('../lib/analytics');
if (args.analytics) {
  analytics.init({
    version: notifier.packageVersion,
  });
} // else analytics acts like a mock

var commands = require('../lib/commands'),
    configureOptions = require('../lib/config_parser');

var commandName = null;

if (args.version) {
  commandName = 'version';
} else if (args.help || args._.length < 1) {
  commandName = 'help';
} else {
  commandName = args._[0];
  if (!commands[commandName]) {
    commandName = 'undefined';
  }
}

var currentCommand = commands[commandName];

if (typeof currentCommand === 'undefined') {
  process.stdout.write(('\nUndefined command: ' + commandName).red + '\n');
  commandName = 'help';
  currentCommand = commands.help;
}

analytics.trackCommand(commandName);

if (currentCommand.needs_config) {
  configureOptions(args, function(err){ 
    if (err) {
      return 1;
    } else {
      currentCommand.execute(args);
    }
  });
} else {
  return currentCommand.execute(args);
}
